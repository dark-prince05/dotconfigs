// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+y",
        "command": "multiCommand.copyAndEscape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.y && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "neovim.mode == 'insert' && suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "neovim.mode == 'insert' && suggestWidgetVisible"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "neovim.mode != 'insert'"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "neovim.mode != 'insert'"
    },
    {
        "key": "alt+h",
        "command": "cursorLeft",
        "when": "neovim.mode == 'insert'"
    },
    {
        "key": "alt+j",
        "command": "cursorDown",
        "when": "neovim.mode == 'insert'"
    },
    {
        "key": "alt+k",
        "command": "cursorUp",
        "when": "neovim.mode == 'insert'"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "neovim.mode == 'insert'"
    },
    // Navigate down in Quick Open and Command Palette
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    // Navigate up in Quick Open and Command Palette
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Focus the search list when it has results
    {
        "key": "enter",
        "command": "search.action.focusSearchList",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+shift+alt+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
]
